@using Saraf365.Core;
@using Saraf365.Core.Enumerations;
@using Saraf365.Core.Repositories;
@using RockCandy.Web.Framework.Utilities;
@using System.ComponentModel.DataAnnotations;
@{
    string LanguageCode = ViewBag.LanguageCode;
    long UserID = ViewBag.UserID;

    TicketRepository tr = new TicketRepository();
    UserRepository ur = new UserRepository();

    long ticketID = 0;
    Int64.TryParse(Request.QueryString["ticketID"], out ticketID);
    Ticket tInstance = null;
    if(ticketID!=0)
    {
        tInstance = tr.GetByID(ticketID);
    }

    User userInstance = ur.GetByID(UserID);
}

<div style="width:100% ; height:100%">

    @if (tInstance == null)
    {
        <script type="text/javascript">
            window.location.reload();
        </script>
    }
    else if (tInstance.xUserID != UserID)
    {
        <script type="text/javascript">
            window.location.reload();
        </script>
    }
    else
    {



        <p class="bodyTitle"><i class="d-inline-flex align-middle ml-2 mdi mdi-message-outline"></i>@tInstance.xTitle <span style="float:left;cursor:pointer" data-toggle="modal" data-target="#NewConversationModal"><i class="d-inline-flex align-middle ml-2 mdi mdi-message-plus"></i></span> </p><hr class="bodyTitleSperator">

        foreach (var item in tInstance.Conversation)
        {
            <div class="ticketMessage">
                <p class="ticketMessageUser">
                    <span>@userInstance.xFullName</span>
                    <span>@item.xBody</span>
                    <span>@DateConvertor.MiladiToShamsi(item.xDate) - @item.xDate.ToShortTimeString()</span>
                </p>
            </div>

            if (item.xResponse != null)
            {
                <div class="ticketMessage">
                    <p class="ticketMessageAdmin">
                        <span>@SectionInfo.Setting.Languages[LanguageCode]["Txt_Admin"]</span>
                        <span>@item.xResponse</span>
                        <span>@DateConvertor.MiladiToShamsi(item.xResponseDate) - @(Convert.ToDateTime(item.xResponseDate).ToShortTimeString())</span>
                        
                        
                    </p>
                </div>
            }

        }
    }



</div>


<div class="modal fade massage-modal" id="NewConversationModal" tabindex="-1" role="dialog" aria-labelledby="MassageModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="MassageModalLabel"><i class="d-inline-flex align-middle ml-1 mdi mdi-message-plus"></i>@SectionInfo.Setting.Languages[LanguageCode]["Txt_NewTicket"]</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="NewConversation" name="NewTicket" data-parsley-validate>
                    <input type="hidden" name="ticketID" value="@tInstance.xID" />
                    <div class="form-group">
                        <i class="mdi mdi-message-outline"></i>
                        <textarea type="text" class="form-control" id="body" name="body" placeholder="@SectionInfo.Setting.Languages[LanguageCode]["Txt_TicketBody"]" data-parsley-required data-trigger="change"></textarea>
                    </div>
                    <button type="submit" class="btn formBtn btn-auth btn-block" >@SectionInfo.Setting.Languages[LanguageCode]["Txt_Submit"]</button>
                </form>
            </div>
        </div>
    </div>
</div>



<script type="text/javascript">


    $("#NewConversation").submit(function (event) {
        
        event.preventDefault();
        if (!$("#NewConversation").parsley().validate()) {
            return;
        }
        $("#NewConversationModal").modal("hide");
        $.ajax({
            headers: { 'RequestVerificationToken': window.TokenHeaderValue },
            url: "/Profile/SubmitTicket", data: $(this).serialize(), type: "POST", dataType: 'json',
            error: function (request, status, error) {
                unhanddleError();
            },
            success: function (e) {
                if (e.CustomFields != undefined && e.CustomFields.Redirect != undefined) {
                    window.location.href = e.CustomFields.Redirect;
                    return;
                }
                if (!e.Status) {
                    Swal({
                        title: e.CustomFields.title,
                        text: e.Message,
                        type: 'error',
                        confirmButtonText: e.CustomFields.confirmButtonText,
                    });
                }
                else {
                    Swal({
                        title: e.CustomFields.title,
                        text: e.Message,
                        type: 'success',
                        confirmButtonText: e.CustomFields.confirmButtonText,
                        showConfirmButton: true,
                        onClose: function () {
                            $("#SupportTicket").click();
                        }
                    });

                }
            }
        });

    });





</script>
@{
    tr.Dispose();
    ur.Dispose();
}